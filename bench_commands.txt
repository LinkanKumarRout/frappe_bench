To initialize new bench instance(project), run the following command:
bench init <bench_name> <version_name(optional)>

Commands
--------
bench --version      -> show bench version
bench --help         -> show all bench commands and help
bench restart        -> Restart all bench service
bench backup         -> Create a backup of the default site
bench migrate        -> Run patches, sync schema and rebuild files/transactions

Development
-----------
bench new-app <app_name>              -> creates a new app
bench get-app <repo_link>             -> downloads an app from git repository and installs it
bench install-app <app_name>          -> installs an existing app
bench uninstall-app <app_name>        -> delete an app and everything linked to the app
bench new-site <site_name>            -> creates a new site
bench use <site_name>                 -> sets a default site
bench drop-site <site_name>           -> removes site from disk and database 

bench set-config [key] [value]        -> add a key value pair to sites config
ex- bench set-config developer_mode 1

bench clear-cache                     -> clear the cache
bench --site <site_name> mariadb      -> Open mariadb console for the site
bench --site <site_name> postgres     -> Open postgresql console for the site

bench start                           -> Start frappe development server - default port is 8000

If you want to create a website using frappe you can install already available frappe app by using bench install-app command
- if you want to create customize website then you can go for creating portal pages, or can modify website pages those are already available or can create pages.

To create portal pages then you can add pages in www folder available inside an app folder, if not create one www folder and create pages like this....suppose you want to create a page named about us then youshould create about_us.html and about_us.py file both...

To create table/docTypes you can go to build option of frappe app and create doctypes by following steps shown on the page.
Sometimes in doctypes you want to modify a field value automatically in order to do that you can add custom script or client script available in the connection tab of a doctype.
Ex- suppose you have two field quantity and price and you want to calculate total price by multiply value entered in both these field so you can create a client script for this...
All these client script are get stored in the database if you want to store these in files then you can use bench export-fixtures command.

Note - If you add anything like Views: report, print format etc., Workflows: workflow, notifications etc., Customizations: Clint scripts, server scripts etc. you have to add those in hooks.py file like this:
fixtures = [
  "Client Script",
  "Workflow",
  # Add options that you want to add
]
then run command: bench export-fixtures
